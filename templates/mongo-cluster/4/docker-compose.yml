version: '2'
services:
    mongo-cluster:
      restart: always
      environment:
        MONGO_SERVICE_NAME: mongo-cluster
        CATTLE_SCRIPT_DEBUG: ${debug}
      entrypoint: /opt/rancher/bin/entrypoint.sh
      command:
      - --replSet
      - "${replset_name}"
      image: mongo:3.2
      logging:
          driver: "json-file"
          options:
            "max-size": "10m"
      labels:
        io.rancher.scheduler.affinity:host_label: ${host_label}
        io.rancher.container.hostname_override: container_name
        io.rancher.sidekicks: mongo-base, mongo-datavolume
      volumes_from:
        - mongo-datavolume
        - mongo-base
    mongo-lb:
      image: rancher/lb-service-haproxy:v0.7.15
      ports:
      - 28018:28018/tcp
      labels:
        io.rancher.container.agent.role: environmentAdmin,agent
        io.rancher.container.agent_service.drain_provider: 'true'
        io.rancher.container.create_agent: 'true'
    mongo-base:
      restart: always
      network_mode: none
      labels:
        io.rancher.scheduler.affinity:host_label: ${host_label}
        io.rancher.container.hostname_override: container_name
        io.rancher.container.start_once: true
      image: rancher/mongodb-conf:v0.1.1
      stdin_open: true
      entrypoint: /bin/true
    mongo-datavolume:
      network_mode: none
      labels:
        io.rancher.scheduler.affinity:host_label: ${host_label}
        io.rancher.container.hostname_override: container_name
        io.rancher.container.start_once: true
      environment:
          - SERVICE_UID=1000
          - SERVICE_GID=1000
          - SERVICE_VOLUME=/data/db
      volumes:
        - mongodata:/data/db
      entrypoint: /bin/true
      image: busybox

volumes:
  mongodata:
    driver: ${VOLUME_DRIVER}
    per_container: true
